// This file is generated by Firebase Extensions.
'use server';
/**
 * @fileOverview A document analysis AI agent.
 *
 * - analyzeDocument - A function that handles the document analysis process.
 * - AnalyzeDocumentInput - The input type for the analyzeDocument function.
 * - AnalyzeDocumentOutput - The return type for the analyzeDocument function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const AnalyzeDocumentInputSchema = z.object({
  documentText: z
    .string()
    .describe('The text content of the document to be analyzed.'),
});
export type AnalyzeDocumentInput = z.infer<typeof AnalyzeDocumentInputSchema>;

const AnalysisDetailsSchema = z.object({
    content: z.string().describe("Analysis of the document's content quality and relevance."),
    structure: z.string().describe("Analysis of the document's structure, formatting, and flow."),
    clarity: z.string().describe("Analysis of the document's clarity, conciseness, and language."),
});

const AnalyzeDocumentOutputSchema = z.object({
  analysis: AnalysisDetailsSchema.describe("The AI's detailed analysis of the document, broken down by category."),
  suggestions: z
    .array(z.string())
    .describe('A list of actionable suggestions for improving the document.'),
  score: z
    .number()
    .describe(
      "A summary score representing the document's overall effectiveness."
    ),
});
export type AnalyzeDocumentOutput = z.infer<typeof AnalyzeDocumentOutputSchema>;

export async function analyzeDocument(
  input: AnalyzeDocumentInput
): Promise<AnalyzeDocumentOutput> {
  return analyzeDocumentFlow(input);
}

const prompt = ai.definePrompt({
  name: 'analyzeDocumentPrompt',
  input: {schema: AnalyzeDocumentInputSchema},
  output: {schema: AnalyzeDocumentOutputSchema},
  prompt: `You are an expert document analyst. Analyze the following document text.
Provide a detailed analysis for each of the following categories: content, structure, and clarity.
Also, provide a list of actionable suggestions for improvement to make it more effective.
Finally, provide an overall effectiveness score between 0 and 100.

Document Text:
{{{documentText}}}`,
});

const analyzeDocumentFlow = ai.defineFlow(
  {
    name: 'analyzeDocumentFlow',
    inputSchema: AnalyzeDocumentInputSchema,
    outputSchema: AnalyzeDocumentOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
